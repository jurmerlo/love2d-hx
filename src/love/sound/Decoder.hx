// Generated by https://github.com/jurmerlo/love2d-hx.
// Love2D Version 11.5.

package love.sound;
import haxe.extern.Rest;
import lua.Table;
import lua.UserData;

/**
 * An object which can gradually decode a sound file.
 */
extern class Decoder extends Object {

	/**
	 * Creates a new copy of current decoder.
	 * The new decoder will start decoding from the beginning of the audio stream.
	 * @return New copy of the decoder.
	 */
	public function clone(): Decoder;

	/**
	 * Decodes the audio and returns a SoundData object containing the decoded audio data.
	 * @return Decoded audio data.
	 */
	public function decode(): SoundData;

	/**
	 * Returns the number of bits per sample.
	 * @return Either 8, or 16.
	 */
	public function getBitDepth(): Float;

	/**
	 * Returns the number of channels in the stream.
	 * @return 1 for mono, 2 for stereo.
	 */
	public function getChannelCount(): Float;

	/**
	 * Gets the duration of the sound file. It may not always be sample-accurate, and it may return -1 if the duration cannot be determined at all.
	 * @return The duration of the sound file in seconds, or -1 if it cannot be determined.
	 */
	public function getDuration(): Float;

	/**
	 * Returns the sample rate of the Decoder.
	 * @return Number of samples per second.
	 */
	public function getSampleRate(): Float;

	/**
	 * Sets the currently playing position of the Decoder.
	 * @param offset The position to seek to, in seconds.
	 */
	public function seek(offset: Float): Void;
}