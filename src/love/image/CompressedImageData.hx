// Generated by https://github.com/jurmerlo/love2d-hx.
// Love2D Version 11.5.

package love.image;
import haxe.extern.Rest;
import lua.Table;
import lua.UserData;

/**
 * Represents compressed image data designed to stay compressed in RAM.
 * CompressedImageData encompasses standard compressed texture formats such as  DXT1, DXT5, and BC5 / 3Dc.
 * You can't draw CompressedImageData directly to the screen. See Image for that.
 */
extern class CompressedImageData extends Data {

	/**
	 * Gets the width and height of the CompressedImageData.
	 */
	@:overload(function (level: Float): CompressedImageDataGetDimensionsResult {})
	public function getDimensions(): CompressedImageDataGetDimensionsResult;

	/**
	 * Gets the format of the CompressedImageData.
	 * @return The format of the CompressedImageData.
	 */
	public function getFormat(): CompressedImageFormat;

	/**
	 * Gets the height of the CompressedImageData.
	 * @return The height of the CompressedImageData.
	 */
	@:overload(function (level: Float): Float {})
	public function getHeight(): Float;

	/**
	 * Gets the number of mipmap levels in the CompressedImageData. The base mipmap level (original image) is included in the count.
	 * @return The number of mipmap levels stored in the CompressedImageData.
	 */
	public function getMipmapCount(): Float;

	/**
	 * Gets the width of the CompressedImageData.
	 * @return The width of the CompressedImageData.
	 */
	@:overload(function (level: Float): Float {})
	public function getWidth(): Float;
}

@:multiReturn
extern class CompressedImageDataGetDimensionsResult {
	var width: Float;
	var height: Float;
}