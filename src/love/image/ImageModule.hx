// Generated by https://github.com/square-two/love2d-hx.
// Love2D Version 11.5.

package love.image;
import haxe.extern.Rest;
import love.filesystem.FileData;
import lua.Table;
import lua.UserData;

/**
 * Provides an interface to decode encoded image data.
 */
@:native('love.image')
extern class ImageModule {

	/**
	 * Determines whether a file can be loaded as CompressedImageData.
	 * @param filename The filename of the potentially compressed image file.
	 * @return Whether the file can be loaded as CompressedImageData or not.
	 */
	@:overload(function (fileData: FileData): Bool {})
	public static function isCompressed(filename: String): Bool;

	/**
	 * Create a new CompressedImageData object from a compressed image file. LÃ–VE supports several compressed texture formats, enumerated in the CompressedImageFormat page.
	 * @param filename The filename of the compressed image file.
	 * @return The new CompressedImageData object.
	 */
	@:overload(function (fileData: FileData): CompressedImageData {})
	public static function newCompressedData(filename: String): CompressedImageData;

	/**
	 * Creates a new ImageData object.
	 * @param width The width of the ImageData.
	 * @param height The height of the ImageData.
	 * @return The new blank ImageData object. Each pixel's color values, (including the alpha values!) will be set to zero.
	 */
	@:overload(function (width: Float, height: Float, ?format: PixelFormat, ?data: String): ImageData {})
	@:overload(function (width: Float, height: Float, data: String): ImageData {})
	@:overload(function (filename: String): ImageData {})
	@:overload(function (filedata: FileData): ImageData {})
	public static function newImageData(width: Float, height: Float): ImageData;
}