// Generated by https://github.com/jurmerlo/love2d-hx.
// Love2D Version 11.5.

package love.physics;
import haxe.extern.Rest;
import lua.Table;
import lua.UserData;

/**
 * Controls the relative motion between two Bodies. Position and rotation offsets can be specified, as well as the maximum motor force and torque that will be applied to reach the target offsets.
 */
extern class MotorJoint extends Joint {

	/**
	 * Gets the target angular offset between the two Bodies the Joint is attached to.
	 * @return The target angular offset in radians: the second body's angle minus the first body's angle.
	 */
	public function getAngularOffset(): Float;

	/**
	 * Gets the target linear offset between the two Bodies the Joint is attached to.
	 */
	public function getLinearOffset(): MotorJointGetLinearOffsetResult;

	/**
	 * Sets the target angluar offset between the two Bodies the Joint is attached to.
	 * @param angleoffset The target angular offset in radians: the second body's angle minus the first body's angle.
	 */
	public function setAngularOffset(angleoffset: Float): Void;

	/**
	 * Sets the target linear offset between the two Bodies the Joint is attached to.
	 * @param x The x component of the target linear offset, relative to the first Body.
	 * @param y The y component of the target linear offset, relative to the first Body.
	 */
	public function setLinearOffset(x: Float, y: Float): Void;
}

@:multiReturn
extern class MotorJointGetLinearOffsetResult {
	var x: Float;
	var y: Float;
}